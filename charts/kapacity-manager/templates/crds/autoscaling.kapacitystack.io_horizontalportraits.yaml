apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: horizontalportraits.autoscaling.kapacitystack.io
  labels:
    {{- include "kapacity-manager.labels" . | nindent 4 }}
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
spec:
  group: autoscaling.kapacitystack.io
  names:
    kind: HorizontalPortrait
    listKind: HorizontalPortraitList
    plural: horizontalportraits
    shortNames:
    - hp
    singular: horizontalportrait
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HorizontalPortrait represents a horizontal portrait (the expectation of replicas) of a scale target with metrics and algorithm configurations that are used to generate the portrait.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HorizontalPortraitSpec defines the desired state of HorizontalPortrait.
            properties:
              algorithm:
                description: Algorithm is the algorithm for which to use to generate the portrait.
                properties:
                  config:
                    additionalProperties:
                      type: string
                    description: 'Config is the general configuration data for arbitrary algorithm those used by external user-defined portraits. TODO: consider if we can make it structural'
                    type: object
                  kubeHPA:
                    description: KubeHPA is the configuration for KubeHPA algorithm.
                    properties:
                      cpuInitializationPeriod:
                        default: 5m
                        description: CPUInitializationPeriod is the period after pod start when CPU samples might be skipped.
                        type: string
                      initialReadinessDelay:
                        default: 30s
                        description: InitialReadinessDelay is period after pod start during which readiness changes are treated as readiness being set for the first time. The only effect of this is that HPA will disregard CPU samples from unready pods that had last readiness change during that period.
                        type: string
                      syncPeriod:
                        default: 15s
                        description: SyncPeriod is the period for syncing the portrait.
                        type: string
                      tolerance:
                        default: "0.1"
                        description: Tolerance is the tolerance for when resource usage suggests upscaling/downscaling. Should be a string formatted float64 number.
                        type: string
                    type: object
                  type:
                    description: Type is the type of algorithm.
                    type: string
                required:
                - type
                type: object
              metrics:
                description: Metrics contains the specifications for which to use to generate the portrait.
                items:
                  description: MetricSpec represents the configuration for a single metric. It is an extended autoscalingv2.MetricSpec.
                  properties:
                    containerResource:
                      description: containerResource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.
                      properties:
                        container:
                          description: container is the name of the container in the pods of the scaling target
                          type: string
                        name:
                          description: name is the name of the resource in question.
                          type: string
                        target:
                          description: target specifies the target value for the given metric
                          properties:
                            averageUtilization:
                              description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            type:
                              description: type represents whether the metric type is Utilization, Value, or AverageValue
                              type: string
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the target value of the metric (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          required:
                          - type
                          type: object
                      required:
                      - container
                      - name
                      - target
                      type: object
                    external:
                      description: external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
                      properties:
                        metric:
                          description: metric identifies the target metric by name and selector
                          properties:
                            name:
                              description: name is the name of the given metric
                              type: string
                            selector:
                              description: selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - name
                          type: object
                        target:
                          description: target specifies the target value for the given metric
                          properties:
                            averageUtilization:
                              description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            type:
                              description: type represents whether the metric type is Utilization, Value, or AverageValue
                              type: string
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the target value of the metric (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          required:
                          - type
                          type: object
                      required:
                      - metric
                      - target
                      type: object
                    name:
                      description: Name is the unique identifier of this metric spec. It must be unique across all metric specs if specified.
                      type: string
                    object:
                      description: object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).
                      properties:
                        describedObject:
                          description: describedObject specifies the descriptions of a object,such as kind,name apiVersion
                          properties:
                            apiVersion:
                              description: API version of the referent
                              type: string
                            kind:
                              description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                              type: string
                            name:
                              description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        metric:
                          description: metric identifies the target metric by name and selector
                          properties:
                            name:
                              description: name is the name of the given metric
                              type: string
                            selector:
                              description: selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - name
                          type: object
                        target:
                          description: target specifies the target value for the given metric
                          properties:
                            averageUtilization:
                              description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            type:
                              description: type represents whether the metric type is Utilization, Value, or AverageValue
                              type: string
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the target value of the metric (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          required:
                          - type
                          type: object
                      required:
                      - describedObject
                      - metric
                      - target
                      type: object
                    operator:
                      description: Operator is an optional binary arithmetic operator which is used to specify a custom comparison rule "<actual> <operator> <target>" for the metric. Note that not all use cases support this.
                      enum:
                      - ==
                      - '>'
                      - <
                      - '>='
                      - <=
                      type: string
                    pods:
                      description: pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.
                      properties:
                        metric:
                          description: metric identifies the target metric by name and selector
                          properties:
                            name:
                              description: name is the name of the given metric
                              type: string
                            selector:
                              description: selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - name
                          type: object
                        target:
                          description: target specifies the target value for the given metric
                          properties:
                            averageUtilization:
                              description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            type:
                              description: type represents whether the metric type is Utilization, Value, or AverageValue
                              type: string
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the target value of the metric (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          required:
                          - type
                          type: object
                      required:
                      - metric
                      - target
                      type: object
                    resource:
                      description: resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
                      properties:
                        name:
                          description: name is the name of the resource in question.
                          type: string
                        target:
                          description: target specifies the target value for the given metric
                          properties:
                            averageUtilization:
                              description: averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
                              format: int32
                              type: integer
                            averageValue:
                              anyOf:
                              - type: integer
                              - type: string
                              description: averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            type:
                              description: type represents whether the metric type is Utilization, Value, or AverageValue
                              type: string
                            value:
                              anyOf:
                              - type: integer
                              - type: string
                              description: value is the target value of the metric (as a quantity).
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          required:
                          - type
                          type: object
                      required:
                      - name
                      - target
                      type: object
                    type:
                      description: 'type is the type of metric source.  It should be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each mapping to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled'
                      type: string
                  required:
                  - type
                  type: object
                type: array
              portraitType:
                description: PortraitType is the type of portrait. Different type has different portrait generating logic.
                type: string
              scaleTargetRef:
                description: ScaleTargetRef points to the target resource to scale.
                properties:
                  apiVersion:
                    description: API version of the referent
                    type: string
                  kind:
                    description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                    type: string
                  name:
                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                required:
                - kind
                - name
                type: object
            required:
            - algorithm
            - portraitType
            - scaleTargetRef
            type: object
          status:
            description: HorizontalPortraitStatus defines the observed state of HorizontalPortrait.
            properties:
              conditions:
                description: Conditions represents current conditions of the HorizontalPortrait.
                items:
                  description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              portraitData:
                description: PortraitData is the data of generated portrait.
                properties:
                  cron:
                    description: Cron refers to cron portrait data.
                    properties:
                      crons:
                        description: Crons contains cron rule based replicas values.
                        items:
                          description: ReplicaCron defines the cron rule for a desired replicas value.
                          properties:
                            description:
                              description: Description is an additional description of this cron rule.
                              type: string
                            end:
                              description: End is the cron of time to which the rule takes effect. It must be a valid standard cron expression.
                              type: string
                            name:
                              description: Name is the name of this cron rule. It must be unique across all rules.
                              type: string
                            replicas:
                              description: Replicas is the desired number of online replicas within this cron rule.
                              format: int32
                              minimum: 0
                              type: integer
                            start:
                              description: Start is the cron of time from which the rule takes effect. It must be a valid standard cron expression.
                              type: string
                            timeZone:
                              default: UTC
                              description: TimeZone is the time zone in which the cron would run. Defaults to UTC.
                              type: string
                          required:
                          - end
                          - name
                          - replicas
                          - start
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - crons
                    type: object
                  expireTime:
                    description: ExpireTime indicates when this portrait data will expire.
                    format: date-time
                    type: string
                  static:
                    description: Static refers to static portrait data.
                    properties:
                      replicas:
                        description: Replicas is the desired number of online replicas.
                        format: int32
                        minimum: 0
                        type: integer
                    required:
                    - replicas
                    type: object
                  timeSeries:
                    description: TimeSeries refers to time series portrait data.
                    properties:
                      timeSeries:
                        description: TimeSeries is time series of replicas. The points of the series MUST be ordered by time. The specified replicas would take effect from that point to the next point. Thus, the last point could last forever until the whole portrait data become expired.
                        items:
                          description: ReplicaTimeSeriesPoint represents a specific point of the time series of replicas.
                          properties:
                            replicas:
                              description: Replicas is the desired number of online replicas from this point.
                              format: int32
                              minimum: 0
                              type: integer
                            timestamp:
                              description: Timestamp is the unix time stamp of this point.
                              format: int64
                              minimum: 0
                              type: integer
                          required:
                          - replicas
                          - timestamp
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - timeSeries
                    type: object
                  type:
                    description: Type is the type of this portrait data.
                    enum:
                    - Static
                    - Cron
                    - TimeSeries
                    type: string
                required:
                - type
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
