apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kapacity-manager.fullname" . }}
  labels:
    {{- include "kapacity-manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kapacity-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kapacity-manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kapacity-manager.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
      - name: manager
        command:
        - /manager
        args:
        - --log-path={{ .Values.logPath }}
        - --log-file-max-age={{ .Values.logFileMaxAge }}
        - --log-file-rotation-time={{ .Values.logFileRotationTime }}
        - --zap-stacktrace-level={{ .Values.zap.stacktraceLevel }}
        - --zap-log-level={{ .Values.zap.logLevel }}
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        - --leader-elect
        - --kube-api-qps={{ .Values.kubeAPIQPS }}
        - --kube-api-burst={{ .Values.kubeAPIBurst }}
        - --reconcile-concurrency={{ .Values.reconcileConcurrency }}
        - --object-label-selector={{ .Values.objectSelector.label }}
        - --object-field-selector={{ .Values.objectSelector.field }}
        - --serve-admission-webhooks={{ .Values.webhook.enabled }}
        - --grpc-server-bind-address={{ .Values.grpcServer.enabled | ternary (print .Values.grpcServer.bindAddress ":" .Values.grpcServer.bindPort) "0" }}
        - --metric-provider={{ .Values.metricProvider }}
        {{- if eq .Values.metricProvider "prometheus" }}
        {{- with .Values.prometheus }}
        - --prometheus-address={{ .address }}
        - --prometheus-auth-incluster={{ .auth.incluster }}
        - --prometheus-auth-config={{ .auth.config }}
        - --prometheus-metrics-config=/etc/kapacity/prometheus-metrics-config.yaml
        - --prometheus-metrics-relist-interval={{ .metrics.relistInterval }}
        {{- if .metrics.maxAge }}
        - --prometheus-metrics-max-age={{ .metrics.maxAge }}
        {{- end }}
        {{- end }}
        {{- end }}
        - --algorithm-job-namespace={{ .Release.Namespace }}
        {{- with .Values.algorithmJob }}
        - --algorithm-job-default-service-account={{ .defaultServiceAccount }}
        - --algorithm-job-default-metrics-server-addr={{ .defaultMetricsServerAddr }}
        {{- with .defaultImage.horizontalPredictive }}
        - --algorithm-job-default-image-horizontal-predictive={{ .registry }}/{{ .repository }}:{{ .tag }}
        {{- end }}
        {{- end }}
        env:
        - name: TZ
          value: {{ .Values.timezone }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- end }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository.namespace }}/{{ .Values.image.repository.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        {{- if .Values.webhook.enabled }}
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        {{- end }}
        {{- if .Values.grpcServer.enabled }}
        - containerPort: {{ .Values.grpcServer.bindPort }}
          name: grpc-server
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/kapacity
          readOnly: true
        {{- if .Values.logPath }}
        - name: log
          mountPath: {{ .Values.logPath }}
        {{- end }}
        {{- if .Values.webhook.enabled }}
        - name: webhook-cert
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "kapacity-manager.selectorLabels" . | nindent 16 }}
            topologyKey: kubernetes.io/hostname
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: kapacity-config
      {{- if .Values.logPath }}
      - name: log
        emptyDir: {}
      {{- end }}
      {{- if .Values.webhook.enabled }}
      - name: webhook-cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      {{- end }}
